<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create The Items In The Menu
menu[0] = "Start";
menu[1] = "Continue";
menu[2] = "Options";
menu[3] = "Quit :[ Don't Leave The Big Dog's So Soon!"

space = 64; //Arbitrary Spacing For Our Menu
mpos  = 0; //Represents where our cursor is.



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Navigates Us Through Menu
var move = 0;
//Check for menu movement
move -= max(keyboard_check_pressed(vk_up),keyboard_check_pressed(ord("W")),0);
move += max(keyboard_check_pressed(vk_down),keyboard_check_pressed(ord("S")),0);
if (move != 0)
{
    mpos += move;
    if (mpos &lt; 0)
    {
        //If mpos &lt; 0 we are outside our menu, lets wrap around
        mpos = (array_length_1d(menu) - 1);
    }
    else if (mpos &gt; (array_length_1d(menu)-1))
    {
        mpos = 0;
        //If mpos &gt; arraylength we are outside our menu, lets wrap around
    }
}
var push;
//Check to enter a menu
push = max(keyboard_check_released(vk_shift),keyboard_check_released(vk_enter),0);
//TODO do we want escape to exit?
//push = -1 * max(keyboard_check_released(vk_escape),0);
if (push == 1)
{
    scr_menu(push);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Our Menu
/*
menu[0] = "Start";
menu[1] = "Continue";
menu[2] = "Options";
menu[3] = "Quit :[ Don't Leave The Big Dog's So Soon!"
*/

scr_set_def_txt();
for (m=0; m &lt; (array_length_1d(menu)); m+=1)
{
    if (m == 3)
    {
        //Long Message, Need to move by more
        draw_text(x + 220, y + (m * space), string(menu[m]));   
    }
    else
    {
        draw_text(x + space, y + (m * space), string(menu[m]));
    }
}
draw_sprite(sprite_index,0,x + 16, y + mpos * space);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
